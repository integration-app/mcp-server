import { AxiosRequestConfig } from 'axios';
export declare const axios: import("axios").AxiosInstance;
export declare const DEFAULT_API_URI = "https://api.integration.app";
export declare const DEFAULT_UI_URI = "https://ui.integration.app";
export interface IntegrationAppClientOptions {
    token?: string;
    fetchToken?: () => Promise<string>;
    credentials?: any;
    fetchCredentials?: () => Promise<any>;
    apiUri?: string;
    uiUri?: string;
    accessToken?: string;
}
export declare class IntegrationAppApiClient {
    apiUri: string;
    uiUri: string;
    token?: string;
    protected fetchToken?: () => Promise<string>;
    constructor({ uiUri, apiUri, accessToken, token, fetchToken, fetchCredentials, credentials, }?: IntegrationAppClientOptions);
    setCredentials(credentials: any): Promise<any>;
    getToken(): Promise<string>;
    get(uri: string, queryParams?: Record<string, any>, options?: AxiosRequestConfig): Promise<any>;
    post(uri: string, data?: any, options?: AxiosRequestConfig): Promise<any>;
    put(uri: string, data?: any, options?: AxiosRequestConfig): Promise<any>;
    patch(uri: string, data?: any, options?: AxiosRequestConfig): Promise<any>;
    delete(uri: string, data?: any, options?: AxiosRequestConfig): Promise<any>;
    getEmbedUri(page: string, params?: Record<string, any>): Promise<string>;
    private makeApiRequest;
    private handleRequestError;
}
