import { ElementAccessor, ElementInstanceAccessor, ElementInstanceListAccessor, ElementListAccessor } from '../accessors';
import { IntegrationAppApiClient } from '../api-client';
import { AppDataSchemaInstanceSelector, CreateAppDataSchemaRequest, FindAppDataSchemaInstancesQuery, FindAppDataSchemasQuery, UpdateAppDataSchemaRequest } from './api';
import { AppDataSchema, AppDataSchemaInstance, CreateAppDataSchemaInstanceRequest, UpdateAppDataSchemaInstanceRequest } from '.';
export declare class AppDataSchemasAccessor extends ElementListAccessor<AppDataSchema, FindAppDataSchemasQuery, CreateAppDataSchemaRequest> {
    constructor(client: IntegrationAppApiClient);
}
export declare class AppDataSchemaAccessor extends ElementAccessor<AppDataSchema, UpdateAppDataSchemaRequest> {
    constructor(client: IntegrationAppApiClient, idOrKey: string);
}
export declare class AppDataSchemaInstancesAccessor extends ElementInstanceListAccessor<AppDataSchemaInstance, FindAppDataSchemaInstancesQuery> {
    constructor(client: IntegrationAppApiClient);
}
export declare class AppDataSchemaInstanceAccessor extends ElementInstanceAccessor<AppDataSchemaInstance, AppDataSchemaInstanceSelector, UpdateAppDataSchemaInstanceRequest, CreateAppDataSchemaInstanceRequest> {
    private client;
    constructor(client: IntegrationAppApiClient, selector: string | AppDataSchemaInstanceSelector);
    setup(): Promise<void>;
}
