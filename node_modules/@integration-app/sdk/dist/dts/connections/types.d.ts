import { ConnectorUiSpec, ConnectorDataUdmSpec, ConnectorDataSpec, ConnectorSpec } from '../connectors/types';
import { ErrorData } from '../errors';
import { Integration } from '../integrations/types';
import { User } from '../users';
export interface ConnectionRequest {
    path: any;
    method?: 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';
    pathParameters?: Record<string, string>;
    headers?: Record<string, string>;
    query?: Record<string, string>;
    data?: any;
}
export declare class Connection {
    id: string;
    name: string;
    userId: string;
    user?: User;
    disconnected?: boolean;
    error?: ErrorData;
    integrationId: string;
    integration?: Integration;
    credentials?: unknown;
    parameters?: unknown;
    connectorParameters?: unknown;
    accessToken?: string;
    refreshToken?: string;
    createdAt: string;
    updatedAt: string;
    archivedAt?: string;
}
export interface ConnectionSpec extends ConnectorSpec {
}
export type ConnectionUiSpec = ConnectorUiSpec;
export type ConnectionUdmSpec = ConnectorDataUdmSpec;
export type ConnectionDataSpec = ConnectorDataSpec;
export declare class ConnectionSpec {
    constructor(opts: ConnectionSpec);
}
