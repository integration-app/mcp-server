import { Connection } from '../connections';
import { ConnectorAuthSpec, ConnectorAuthType, ConnectorSpec } from '../connectors';
import { DataSchema } from '../data-schema';
import { ErrorData } from '../errors';
import { WorkspaceElementState } from '../workspace-elements';
export interface Integration {
    id: string;
    name: string;
    key: string;
    state?: WorkspaceElementState;
    errors?: ErrorData[];
    logoUri: string;
    connectorId?: string;
    connectorVersion?: string;
    authOptions?: IntegrationAuthOption[];
    oAuthCallbackUri?: string;
    parametersSchema?: DataSchema;
    parameters?: any;
    baseUri: string;
    connection?: Connection;
    archivedAt?: string;
    areParametersCustomized?: boolean;
    spec?: ConnectorSpec;
    hasMissingParameters?: boolean;
    hasDefaultParameters?: boolean;
    hasDocumentation?: boolean;
    hasOperations?: boolean;
    hasData?: boolean;
    hasEvents?: boolean;
    hasGlobalWebhooks?: boolean;
    hasUdm?: boolean;
    isTest?: boolean;
    appUuid?: string;
    isDeactivated?: boolean;
    authType?: ConnectorAuthType;
}
export type IntegrationAuthOption = ConnectorAuthSpec & {
    key: string;
};
export type AppliedToIntegrations<Element> = {
    element: Element;
    integration: Integration;
}[];
