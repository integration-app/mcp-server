import { Connection } from '../connections';
import { DataSchema } from '../data-schema';
import { ErrorData } from '../errors';
import { IntegrationElementInstance } from '../integration-elements';
import { AppliedToIntegrations, Integration } from '../integrations';
import { User } from '../users';
import { WorkspaceElementState } from '../workspace-elements';
export interface FlowNode {
    type?: string;
    version?: number;
    name?: string;
    description?: string;
    config?: any;
    concurrency?: number;
    onError?: 'stop' | 'continue';
    ui?: any;
    inputSchema?: any;
    outputSchema?: any;
    outputExample?: any;
    links?: FlowNodeLink[];
    isCustomized?: boolean;
}
export interface Flow {
    id: string;
    name: string;
    key: string;
    integrationId?: string;
    integration?: Integration;
    universalFlowId?: string;
    universalFlowRevision?: string;
    parametersSchema?: DataSchema;
    nodes?: Record<string, FlowNode>;
    autoCreateInstances?: boolean;
    archivedAt?: string;
    revision: string;
    customized?: boolean;
    appliedToIntegrations?: AppliedToIntegrations<Flow>;
    isDeployed?: boolean;
}
export interface FlowInstance {
    id: string;
    userId: string;
    user?: User;
    connectionId?: string;
    connection?: Connection;
    flow?: Flow;
    flowId?: string;
    universalFlowId?: string;
    integrationId: string;
    integration?: Integration;
    instanceKey?: string;
    name: string;
    parameters?: any;
    parametersSchema?: DataSchema;
    nodes?: Record<string, FlowInstanceNode>;
    enabled: boolean;
    createdAt: string;
    updatedAt: string;
    dependencies?: IntegrationElementInstance[];
    state?: WorkspaceElementState;
    outdated?: boolean;
    customized?: {
        name?: boolean;
        nodes?: boolean;
    };
}
export declare enum FlowInstanceNodeState {
    SETTING_UP = "SETTING_UP",
    SETUP_FAILED = "SETUP_FAILED",
    READY = "READY"
}
export interface FlowInstanceNode extends FlowNode {
    state?: FlowInstanceNodeState;
    errors?: ErrorData[];
    userConfig?: any;
    testInput?: any;
    dependencies?: IntegrationElementInstance[];
}
export interface FlowNodeLink {
    key?: string;
    filter?: any;
    name?: string;
}
