import { z } from 'zod';
export declare const createFlowInstanceSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    userId: z.ZodOptional<z.ZodString>;
    flowId: z.ZodOptional<z.ZodString>;
    connectionId: z.ZodOptional<z.ZodString>;
    integrationId: z.ZodOptional<z.ZodString>;
    instanceKey: z.ZodOptional<z.ZodString>;
    parameters: z.ZodOptional<z.ZodAny>;
    nodes: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        type: z.ZodOptional<z.ZodString>;
        userConfig: z.ZodOptional<z.ZodAny>;
        config: z.ZodOptional<z.ZodAny>;
        onError: z.ZodOptional<z.ZodEnum<["stop", "continue"]>>;
        concurrency: z.ZodOptional<z.ZodNumber>;
        ui: z.ZodOptional<z.ZodAny>;
        links: z.ZodOptional<z.ZodArray<z.ZodObject<{
            key: z.ZodOptional<z.ZodString>;
            filter: z.ZodOptional<z.ZodAny>;
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            key?: string | undefined;
            name?: string | undefined;
            filter?: any;
        }, {
            key?: string | undefined;
            name?: string | undefined;
            filter?: any;
        }>, "many">>;
        isCustomized: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        concurrency?: number | undefined;
        type?: string | undefined;
        name?: string | undefined;
        userConfig?: any;
        config?: any;
        onError?: "stop" | "continue" | undefined;
        ui?: any;
        links?: {
            key?: string | undefined;
            name?: string | undefined;
            filter?: any;
        }[] | undefined;
        isCustomized?: boolean | undefined;
    }, {
        concurrency?: number | undefined;
        type?: string | undefined;
        name?: string | undefined;
        userConfig?: any;
        config?: any;
        onError?: "stop" | "continue" | undefined;
        ui?: any;
        links?: {
            key?: string | undefined;
            name?: string | undefined;
            filter?: any;
        }[] | undefined;
        isCustomized?: boolean | undefined;
    }>>>;
    enabled: z.ZodOptional<z.ZodBoolean>;
    customized: z.ZodOptional<z.ZodObject<{
        name: z.ZodOptional<z.ZodBoolean>;
        nodes: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        name?: boolean | undefined;
        nodes?: boolean | undefined;
    }, {
        name?: boolean | undefined;
        nodes?: boolean | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    name?: string | undefined;
    userId?: string | undefined;
    integrationId?: string | undefined;
    connectionId?: string | undefined;
    parameters?: any;
    flowId?: string | undefined;
    instanceKey?: string | undefined;
    nodes?: Record<string, {
        concurrency?: number | undefined;
        type?: string | undefined;
        name?: string | undefined;
        userConfig?: any;
        config?: any;
        onError?: "stop" | "continue" | undefined;
        ui?: any;
        links?: {
            key?: string | undefined;
            name?: string | undefined;
            filter?: any;
        }[] | undefined;
        isCustomized?: boolean | undefined;
    }> | undefined;
    enabled?: boolean | undefined;
    customized?: {
        name?: boolean | undefined;
        nodes?: boolean | undefined;
    } | undefined;
}, {
    name?: string | undefined;
    userId?: string | undefined;
    integrationId?: string | undefined;
    connectionId?: string | undefined;
    parameters?: any;
    flowId?: string | undefined;
    instanceKey?: string | undefined;
    nodes?: Record<string, {
        concurrency?: number | undefined;
        type?: string | undefined;
        name?: string | undefined;
        userConfig?: any;
        config?: any;
        onError?: "stop" | "continue" | undefined;
        ui?: any;
        links?: {
            key?: string | undefined;
            name?: string | undefined;
            filter?: any;
        }[] | undefined;
        isCustomized?: boolean | undefined;
    }> | undefined;
    enabled?: boolean | undefined;
    customized?: {
        name?: boolean | undefined;
        nodes?: boolean | undefined;
    } | undefined;
}>;
export declare const updateFlowInstanceSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    enabled: z.ZodOptional<z.ZodBoolean>;
    parameters: z.ZodOptional<z.ZodAny>;
    nodes: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        type: z.ZodOptional<z.ZodString>;
        userConfig: z.ZodOptional<z.ZodAny>;
        config: z.ZodOptional<z.ZodAny>;
        onError: z.ZodOptional<z.ZodEnum<["stop", "continue"]>>;
        links: z.ZodOptional<z.ZodArray<z.ZodObject<{
            key: z.ZodOptional<z.ZodString>;
            filter: z.ZodOptional<z.ZodAny>;
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            key?: string | undefined;
            name?: string | undefined;
            filter?: any;
        }, {
            key?: string | undefined;
            name?: string | undefined;
            filter?: any;
        }>, "many">>;
        concurrency: z.ZodOptional<z.ZodNumber>;
        isCustomized: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        concurrency?: number | undefined;
        type?: string | undefined;
        name?: string | undefined;
        userConfig?: any;
        config?: any;
        onError?: "stop" | "continue" | undefined;
        links?: {
            key?: string | undefined;
            name?: string | undefined;
            filter?: any;
        }[] | undefined;
        isCustomized?: boolean | undefined;
    }, {
        concurrency?: number | undefined;
        type?: string | undefined;
        name?: string | undefined;
        userConfig?: any;
        config?: any;
        onError?: "stop" | "continue" | undefined;
        links?: {
            key?: string | undefined;
            name?: string | undefined;
            filter?: any;
        }[] | undefined;
        isCustomized?: boolean | undefined;
    }>>>;
    archivedAt: z.ZodOptional<z.ZodString>;
    customized: z.ZodOptional<z.ZodObject<{
        name: z.ZodOptional<z.ZodBoolean>;
        nodes: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        name?: boolean | undefined;
        nodes?: boolean | undefined;
    }, {
        name?: boolean | undefined;
        nodes?: boolean | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    name?: string | undefined;
    parameters?: any;
    nodes?: Record<string, {
        concurrency?: number | undefined;
        type?: string | undefined;
        name?: string | undefined;
        userConfig?: any;
        config?: any;
        onError?: "stop" | "continue" | undefined;
        links?: {
            key?: string | undefined;
            name?: string | undefined;
            filter?: any;
        }[] | undefined;
        isCustomized?: boolean | undefined;
    }> | undefined;
    enabled?: boolean | undefined;
    customized?: {
        name?: boolean | undefined;
        nodes?: boolean | undefined;
    } | undefined;
    archivedAt?: string | undefined;
}, {
    name?: string | undefined;
    parameters?: any;
    nodes?: Record<string, {
        concurrency?: number | undefined;
        type?: string | undefined;
        name?: string | undefined;
        userConfig?: any;
        config?: any;
        onError?: "stop" | "continue" | undefined;
        links?: {
            key?: string | undefined;
            name?: string | undefined;
            filter?: any;
        }[] | undefined;
        isCustomized?: boolean | undefined;
    }> | undefined;
    enabled?: boolean | undefined;
    customized?: {
        name?: boolean | undefined;
        nodes?: boolean | undefined;
    } | undefined;
    archivedAt?: string | undefined;
}>;
export type CreateFlowInstanceRequest = z.infer<typeof createFlowInstanceSchema>;
export type UpdateFlowInstanceRequest = z.infer<typeof updateFlowInstanceSchema>;
