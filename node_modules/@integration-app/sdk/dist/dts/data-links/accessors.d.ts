import { ElementAccessor, ElementInstanceAccessor, ElementInstanceListAccessor, ElementListAccessor } from '../accessors';
import { IntegrationAppApiClient } from '../api-client';
import { CreateDataLinkRequest, CreateDataLinkTableRequest, DataLinkTableInstanceSelector, DeleteDataLinkRequest, FindDataLinkTableInstancesQuery, FindDataLinkTablesQuery, FindDataLinksInTableQuery, FindDataLinksResponse, UpdateDataLinkTableInstanceRequest, UpdateDataLinkTableRequest } from './api';
import { DataLinkTable, DataLinkTableInstance } from '.';
export declare class DataLinkTablesAccessor extends ElementListAccessor<DataLinkTable, FindDataLinkTablesQuery, CreateDataLinkTableRequest> {
    constructor(client: IntegrationAppApiClient);
}
export declare class DataLinkTableAccessor extends ElementAccessor<DataLinkTable, UpdateDataLinkTableRequest> {
    constructor(client: IntegrationAppApiClient, idOrKey: string);
}
export declare class DataLinkTableInstancesAccessor extends ElementInstanceListAccessor<DataLinkTableInstance, FindDataLinkTableInstancesQuery> {
    constructor(client: IntegrationAppApiClient);
}
export declare class DataLinkTableInstanceAccessor extends ElementInstanceAccessor<DataLinkTableInstance, DataLinkTableInstanceSelector, UpdateDataLinkTableInstanceRequest, UpdateDataLinkTableInstanceRequest> {
    private client;
    constructor(client: IntegrationAppApiClient, selector: string | DataLinkTableInstanceSelector);
    findLinks(query?: FindDataLinksInTableQuery): Promise<FindDataLinksResponse>;
    createLink(data: CreateDataLinkRequest): Promise<void>;
    deleteLink(data: DeleteDataLinkRequest): Promise<void>;
}
