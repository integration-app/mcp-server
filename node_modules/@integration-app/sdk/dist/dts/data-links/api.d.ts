import { ElementInstanceSelector } from '../accessors';
import { ConnectionSelector } from '../connections/api';
import { PaginationQuery, PaginationResponse } from '../entity-repository';
import { DataLink, DataLinkDirection, DataLinkTable } from '.';
export type CreateDataLinkTableRequest = Omit<DataLinkTable, 'id' | 'userId'>;
export type UpdateDataLinkTableRequest = CreateDataLinkTableRequest;
export interface FindDataLinkTablesQuery extends PaginationQuery {
}
export interface FindDataLinkTableInstancesQuery extends PaginationQuery {
    connectionId?: string;
    integrationId?: string;
    dataLinkTableId?: string;
}
export interface DataLinkTableInstanceSelector extends ConnectionSelector, ElementInstanceSelector {
    dataLinkTableId?: string;
    dataLinkTableKey?: string;
    instanceKey?: string;
}
export interface UpdateDataLinkTableInstanceRequest {
}
export interface CreateDataLinkTableInstanceRequest {
}
export interface FindDataLinksInTableQuery extends PaginationQuery {
    direction?: DataLinkDirection;
    appRecordId?: string;
    externalRecordId?: string;
}
export interface CreateDataLinkRequest {
    direction?: DataLinkDirection;
    appRecordId: string;
    externalRecordId: string;
}
export interface DeleteDataLinkRequest {
    direction?: DataLinkDirection;
    appRecordId: string;
    externalRecordId: string;
}
export interface FindDataLinksQuery extends PaginationQuery, FindDataLinksInTableQuery {
    dataLinkTableInstanceId: string;
}
export interface FindDataLinksResponse extends PaginationResponse<DataLink> {
}
export interface FindDataLinkQuery extends PaginationQuery {
    dataLinkTableInstanceId: string;
    externalRecordId: string;
    appRecordId: string;
    direction: DataLinkDirection;
}
export interface DataLinkInTableSelector {
    appRecordId: string;
    externalRecordId: string;
    direction: DataLinkDirection;
}
export interface DataLinkSelector extends DataLinkInTableSelector {
    dataLinkTableInstanceId: string;
}
