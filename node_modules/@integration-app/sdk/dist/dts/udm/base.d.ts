import { DataCollectionCreateSpec, DataCollectionDeleteSpec, DataCollectionFindSpec, DataCollectionListSpec, DataCollectionMatchSpec, DataCollectionUpdateSpec } from '../connectors/data-locations';
import { CONNECTOR_CATEGORIES } from '../connectors/types';
export interface UnifiedDataModel {
    singularName: string;
    pluralName: string;
    fieldsSchema: any;
    description?: string;
    categories?: (typeof CONNECTOR_CATEGORIES)[number][];
    normalizeFields?: (fields: Record<string, any>) => Record<string, any>;
    populateFields?: (fields: Record<string, any>) => Record<string, any>;
    list?: DataCollectionListSpec;
    find?: DataCollectionFindSpec;
    match?: DataCollectionMatchSpec;
    create?: DataCollectionCreateSpec;
    update?: DataCollectionUpdateSpec;
    delete?: DataCollectionDeleteSpec;
    udmFallbacks?: Array<UDMFallback>;
    fieldFallbacks?: Record<string, FieldFallbackValues>;
}
export interface UDMFallback {
    udm: string;
    importFields?: Record<string, any>;
    exportFields?: Record<string, any>;
}
export type FieldFallbackValues = any[];
export declare const AddressSchema: {
    type: string;
    properties: {
        type: {
            type: string;
        };
        full: {
            type: string;
        };
        street: {
            type: string;
        };
        city: {
            type: string;
        };
        state: {
            type: string;
        };
        country: {
            type: string;
        };
        zip: {
            type: string;
        };
    };
};
export declare const PhoneEmailSchema: {
    type: string;
    properties: {
        value: {
            type: string;
        };
        type: {
            type: string;
        };
    };
};
