import { IntegrationAppApiClient } from '../api-client';
import { FindFlowRunsQuery, FindFlowRunsResponse, CreateFlowRunRequest, FlowRun } from '.';
export declare class FlowRunsAccessor {
    private readonly client;
    constructor(client: IntegrationAppApiClient);
    find(query: FindFlowRunsQuery): Promise<FindFlowRunsResponse>;
    create(request: CreateFlowRunRequest): Promise<FlowRun>;
}
export declare class FlowRunAccessor {
    private readonly client;
    id: string;
    private baseUri;
    constructor(client: IntegrationAppApiClient, id: string);
    get(): Promise<FlowRun>;
    stop(): Promise<void>;
    getOutput(): Promise<any>;
    getNodeRuns(nodeKey: string, parameters?: {
        cursor?: string;
    }): Promise<any>;
    getNodeRun(nodeKey: string, runId: string): Promise<any>;
    getNodeOutputs(nodeKey: string, parameters?: {
        cursor?: string;
    }): Promise<any>;
    getNodeOutput(nodeKey: string, outputId: string): Promise<any>;
    repeat(): Promise<FlowRun>;
}
