import { Connection } from '../connections';
import { PaginationResponse, PaginationQuery } from '../entity-repository';
import { ErrorData } from '../errors';
import { FlowInstance } from '../flows';
import { Integration } from '../integrations';
import { Customer } from '../users';
export * from './flow-node-runs';
export * from './accessors';
export declare enum FlowRunState {
    QUEUED = "queued",
    RUNNING = "running",
    COMPLETED = "completed",
    STOPPED = "stopped",
    FAILED = "failed"
}
export declare enum FlowRunNodeState {
    RUNNING = "running",
    COMPLETED = "completed",
    STOPPED = "stopped",
    FAILED = "failed"
}
export declare enum FlowRunLaunchedByTrigger {
    ApiTrigger = "api-trigger",
    ScheduleTrigger = "schedule-trigger",
    AppEventTrigger = "app-event-trigger",
    DataSourceTrigger = "data-source-trigger",
    ExternalEvent = "external-event"
}
export interface FlowRun {
    id: string;
    flowInstanceId: string;
    flowInstance?: FlowInstance;
    universalFlowId?: string;
    connectionId?: string;
    connection?: Connection;
    integrationId?: string;
    integration?: Integration;
    startNodeKey: string;
    userId: string;
    user?: Customer;
    input?: any;
    state: FlowRunState;
    startTime: string;
    endTime?: string;
    errors?: ErrorData[];
    nodes?: Record<string, FlowRunNode>;
    launchedBy?: FlowRunLaunchedBy;
}
export interface FlowRunNode {
    state: FlowRunNodeState;
    runs?: number;
    erroredRuns?: number;
    outputs?: number;
}
export interface FlowRunLaunchedBy {
    type: FlowRunLaunchedByTrigger;
    ids?: string[];
}
export interface CreateFlowRunRequest {
    flowInstanceId: string;
    nodeKey?: string;
    input?: any;
}
export interface FindFlowRunsQuery extends PaginationQuery {
    id?: string;
    flowInstanceId?: string;
    startNodeKey?: string;
    flowId?: string;
    universalFlowId?: string;
    userId?: string;
    state?: FlowRunState;
    integrationId?: string;
    connectionId?: string;
    startedAfter?: string;
}
export interface FindFlowRunsResponse extends PaginationResponse<FlowRun> {
}
