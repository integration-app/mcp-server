import { IntegrationAppApiClient } from '../api-client';
import { PaginationResponse } from '../entity-repository';
export declare class ConnectionLevelElementAccessor<Element, UpdateElement> {
    protected client: IntegrationAppApiClient;
    protected connectionSelector: string;
    protected selector: string;
    protected elementKey: string;
    protected query: Record<string, any>;
    protected endpoint: string;
    constructor(client: IntegrationAppApiClient, connectionSelector: string, selector: string, elementKey: string, query: Record<string, any>);
    protected uri(path?: string, query?: {}): string;
    getUniqueIdentifier(): string;
    get(query?: {
        autoCreate?: boolean;
    }): Promise<Element>;
    create(): Promise<Element>;
    patch(data: Partial<UpdateElement>): Promise<Element>;
    put(data: UpdateElement): Promise<Element>;
    archive(): Promise<void>;
    reset(): Promise<Element>;
    setup(): Promise<Element>;
}
export declare class ConnectionLevelElementsListAccessor<Element, Query> {
    protected client: IntegrationAppApiClient;
    protected connectionSelector: string;
    protected elementKey: string;
    constructor(client: IntegrationAppApiClient, connectionSelector: string, elementKey: string);
    list(query?: Query): Promise<PaginationResponse<Element[]>>;
}
