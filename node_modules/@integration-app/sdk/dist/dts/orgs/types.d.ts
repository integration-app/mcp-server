export declare enum OrgLimitsType {
    NUMBER_OF_WORKSPACES = "numberOfWorkspaces",
    TODAY_USAGE = "todayUsage",
    LAST_THIRTY_DAY_USAGE = "lastThirtyDayUsage"
}
export interface OrgLimits {
    [OrgLimitsType.NUMBER_OF_WORKSPACES]?: number;
    [OrgLimitsType.TODAY_USAGE]?: number;
    [OrgLimitsType.LAST_THIRTY_DAY_USAGE]?: number;
}
export interface Org {
    id: string;
    key: string;
    secret?: string;
    name: string;
    createdAt: Date;
    updatedAt: Date;
    trialEndDate?: string;
    limits?: OrgLimits;
    lastThirtyDayUsagePercent?: number;
    todayUsagePercent?: number;
}
export declare enum OrgUserRole {
    Admin = "admin",
    Member = "member"
}
export declare enum OrgUserStatus {
    Invited = "invited",
    Active = "active"
}
export interface PlatformUser {
    id: string;
    email: string;
    name: string;
    trialRequested: boolean;
}
export interface OrgUser {
    id: string;
    orgId: string;
    userId: string;
    role: OrgUserRole;
    status: OrgUserStatus;
    workspaces: string[];
    user: PlatformUser;
}
export interface OrgWorkspace {
    id: string;
    key: string;
    name: string;
    orgId: string;
    logoUri?: string;
    secret: string;
    createdAt: Date;
    updatedAt: Date;
    archivedAt?: Date;
    trialEndDate?: string;
    featureFlags?: string[];
}
