import { ElementAccessor, ElementInstanceAccessor, ElementInstanceListAccessor, ElementListAccessor } from '../accessors';
import { IntegrationAppApiClient } from '../api-client';
import { AppEventSubscriptionSelector, CreateAppEventTypeRequest, FindAppEventSubscriptionsQuery, FindAppEventTypesQuery, AppEventSubscriptionUpdateRequest, UpdateAppEventTypeRequest } from './api';
import { AppEventType, AppEventSubscription, FindAppEventsQuery, AppEvent } from '.';
export declare class AppEventTypesAccessor extends ElementListAccessor<AppEventType, FindAppEventTypesQuery, CreateAppEventTypeRequest> {
    constructor(client: IntegrationAppApiClient);
}
export declare class AppEventTypeAccessor extends ElementAccessor<AppEventType, UpdateAppEventTypeRequest> {
    constructor(client: IntegrationAppApiClient, idOrKey: string);
}
export declare class AppEventSubscriptionsAccessor extends ElementInstanceListAccessor<AppEventSubscription, FindAppEventSubscriptionsQuery> {
    constructor(client: IntegrationAppApiClient);
}
export declare class AppEventSubscriptionAccessor extends ElementInstanceAccessor<AppEventSubscription, AppEventSubscriptionSelector, AppEventSubscriptionUpdateRequest, AppEventSubscriptionUpdateRequest> {
    constructor(client: IntegrationAppApiClient, selector: string | AppEventSubscriptionSelector);
    subscribe(): Promise<void>;
}
export declare class AppEventsAccessor extends ElementInstanceListAccessor<AppEvent, FindAppEventsQuery> {
    constructor(client: IntegrationAppApiClient);
}
