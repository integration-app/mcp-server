import { DataSchema } from '../../data-schema';
import { ConnectorDataLocation, DataCollectionSpec, DataLocationPointer } from '.';
export declare function getDataLocationMethodPath(locationKey: any, methodKey: any): string;
export declare function dataLocationParametersMatch({ locationParameters, targetParameters, }: {
    locationParameters: Record<string, any>;
    targetParameters: Record<string, any>;
}): boolean;
export declare function parseDataLocationPath(path: string): DataLocationPointer;
export declare function parseDataLocationPath(path: string | undefined): DataLocationPointer | undefined;
export declare function makeDataLocationPath(pointer: DataLocationPointer): string;
export declare function makeDataLocationPath(pointer: DataLocationPointer | undefined): string | undefined;
export declare function makeDataLocationOperationPath(collectionPath: string, operation: string): string;
export declare function isSameDataLocation(location1: DataLocationPointer, location2: DataLocationPointer): boolean;
export declare function isDataLocationMethodSupported(location: ConnectorDataLocation, methodKey: string): boolean;
export declare function getDataCollectionCreateFields(spec: DataCollectionSpec): DataSchema | undefined;
export declare function getDataCollectionUpdateFields(spec: DataCollectionSpec): DataSchema | undefined;
export declare function getWritableFieldsSchema(spec: DataCollectionSpec): DataSchema | undefined;
