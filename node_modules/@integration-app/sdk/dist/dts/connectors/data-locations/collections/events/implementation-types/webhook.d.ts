import { DataSchema } from '../../../../../data-schema';
import { ConnectorDataLocationMethod } from '../../../methods';
import { ConnectorDataCollectionEventMethodType } from '../methods';
export interface WebhookEventImplementationFields {
    implementationType: 'webhook';
    querySchema?: DataSchema;
    dataSchema?: DataSchema;
    stateSchema?: DataSchema;
    methods: Record<keyof typeof WebhookEventImplementationType.methods, ConnectorDataLocationMethod>;
}
export declare const WebhookEventImplementationType: {
    methods: {
        subscribe: ConnectorDataCollectionEventMethodType<WebhookEventImplementationFields>;
        unsubscribe: ConnectorDataCollectionEventMethodType<WebhookEventImplementationFields>;
        handle: ConnectorDataCollectionEventMethodType<WebhookEventImplementationFields>;
        refresh: ConnectorDataCollectionEventMethodType<WebhookEventImplementationFields>;
    };
};
