import { ConnectorDataCollection } from '..';
import { DataSchema } from '../../../../data-schema';
import { ConnectorMethodImplementationType } from '../../../methods';
import { ConnectorSpec } from '../../../types';
import { ConnectorDataLocationMethod } from '../../methods';
import { DataCollectionSpec } from '../../types';
export interface ConnectorDataCollectionMethodType<ConfigFields = unknown> {
    name?: string;
    description?: string;
    fileKey?: string;
    getConfigSchema?: (args: ConnectorDataCollectionMethodTypeArgs<ConfigFields>) => DataSchema;
    getInputSchema?: (args: ConnectorDataCollectionMethodTypeArgs<ConfigFields>) => DataSchema;
    getOutputSchema?: (args: ConnectorDataCollectionMethodTypeArgs<ConfigFields>) => DataSchema;
    supportedImplementationTypes: ConnectorMethodImplementationType[];
    isDeprecated?: boolean;
}
interface ConnectorDataCollectionMethodTypeArgs<ConfigFields = unknown> {
    method?: ConnectorDataLocationMethod<ConfigFields>;
    collectionHandler?: ConnectorDataCollection;
    collectionSpec?: DataCollectionSpec;
    connectorSpec?: ConnectorSpec;
    parameters?: any;
}
export {};
