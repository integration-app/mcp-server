import { CustomPullEventImplementationFields } from './implementation-types/custom-pull';
import { FullScanEventImplementationFields } from './implementation-types/full-scan';
import { PullLatestRecordsEventImplementationFields } from './implementation-types/pull-latest-records';
import { WebhookEventImplementationFields } from './implementation-types/webhook';
export { PullLatestRecordsEventOutput } from './implementation-types/pull-latest-records';
interface BaseConnectorDataCollectionEventImplementationFields {
    implementationType: keyof typeof ConnectorDataCollectionEventImplementationType;
}
export type ConnectorDataCollectionEvent<ImplementationFields = BaseConnectorDataCollectionEventImplementationFields> = {
    inheritedFromPath?: string[];
    isIdOnly?: boolean;
} & ImplementationFields;
export type ConnectorDataCollectionEventWebhook = ConnectorDataCollectionEvent<WebhookEventImplementationFields>;
export type ConnectorDataCollectionEventPullLatestRecords = ConnectorDataCollectionEvent<PullLatestRecordsEventImplementationFields>;
export type ConnectorDataCollectionEventCustomPull = ConnectorDataCollectionEvent<CustomPullEventImplementationFields>;
export type ConnectorDataCollectionEventFullScan = ConnectorDataCollectionEvent<FullScanEventImplementationFields>;
export declare const ConnectorDataCollectionEventImplementationType: {
    webhook: {
        methods: {
            subscribe: import("./methods").ConnectorDataCollectionEventMethodType<WebhookEventImplementationFields>;
            unsubscribe: import("./methods").ConnectorDataCollectionEventMethodType<WebhookEventImplementationFields>;
            handle: import("./methods").ConnectorDataCollectionEventMethodType<WebhookEventImplementationFields>;
            refresh: import("./methods").ConnectorDataCollectionEventMethodType<WebhookEventImplementationFields>;
        };
    };
    'pull-latest-records': {
        methods: {
            pullLatestRecords: import("./methods").ConnectorDataCollectionEventMethodType<PullLatestRecordsEventImplementationFields>;
        };
    };
    'custom-pull': {
        methods: {
            subscribe: import("./methods").ConnectorDataCollectionEventMethodType<CustomPullEventImplementationFields>;
            collectEvents: import("./methods").ConnectorDataCollectionEventMethodType<CustomPullEventImplementationFields>;
        };
    };
    'connector-event': {
        methods: {
            getEventConfig: import("./methods").ConnectorDataCollectionEventMethodType<import("./implementation-types/connector-event").ConnectorEventImplementationFields>;
            extractEvents: import("./methods").ConnectorDataCollectionEventMethodType<import("./implementation-types/connector-event").ConnectorEventImplementationFields>;
        };
    };
    'full-scan': {
        methods: {};
    };
};
export type ConnectorDataCollectionEventType = 'created' | 'updated' | 'deleted';
export type ConnectorDataCollectionEventImplementationTypeKey = keyof typeof ConnectorDataCollectionEventImplementationType;
export declare function getEventMethodFileKey(eventType: ConnectorDataCollectionEventType, eventImplementationType: ConnectorDataCollectionEventImplementationTypeKey, methodKey: string): string | undefined;
export declare function getAllEventMethodFilePaths(eventType: ConnectorDataCollectionEventType | 'all', eventImplementationType: ConnectorDataCollectionEventImplementationTypeKey, methodKey: string): (string | null | undefined)[];
