import https from 'https';
import { HttpRequestMethod } from '../http-requests';
export interface RestApiClientInput {
    path: string;
    method: HttpRequestMethod;
    query?: Record<string, string>;
    data?: any;
    headers?: Record<string, string>;
    responseType?: 'arraybuffer' | 'stream';
    returnFullResponse?: boolean;
}
export interface RestApiClientOutput {
    status: number;
    headers?: Record<string, string>;
    data?: any;
}
export interface RestApiMapping {
    path: string;
    method: string;
    requestMapping: {
        pathParameters?: any;
        query?: any;
        data?: any;
        headers?: any;
    };
    responseMapping?: any;
}
export interface RestApiClientResponseHandler {
    match: any;
    isSuccess: boolean;
    error?: any;
}
export interface RestApiClientOverride {
    match: {
        path: string;
        method: string;
    };
    patch?: {
        query?: Record<string, string>;
        data?: any;
        headers?: Record<string, string>;
    };
}
export interface RestApiClientOptions {
    baseUri?: any;
    proxyUri?: any;
    headers?: {
        [key: string]: any;
    };
    auth?: {
        username: any;
        password: any;
    };
    query?: {
        [key: string]: any;
    };
    returnFullResponse?: boolean;
    responseHandlers?: Array<RestApiClientResponseHandler>;
    overrides?: RestApiClientOverride[];
    httpsAgent?: https.Agent;
    dynamicOptions?: (input: RestApiClientInput) => RestApiClientOptions;
    binary?: boolean;
    stream?: boolean;
    onError?: (error: any) => any;
}
