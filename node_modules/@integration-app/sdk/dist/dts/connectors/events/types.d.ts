import { DataSchema } from '../../data-schema';
import { ConnectorMethodImplementation, ConnectorMethodImplementationType } from '../methods';
export declare enum ConnectorEventImplementationType {
    GlobalWebhook = "global-webhook",
    Webhook = "webhook"
}
interface ConnectorEventHandlerMethodSpec {
    supportedImplementationTypes: ConnectorMethodImplementationType[];
    isRequired: boolean;
}
export declare const ConnectorEventHandlerMethods: Record<ConnectorEventImplementationType, Record<string, ConnectorEventHandlerMethodSpec>>;
export interface ConnectorEventHandler {
    key: string;
    name: string;
    description?: string;
    parametersSchema?: DataSchema;
    implementationType: ConnectorEventImplementationType;
    schema?: DataSchema;
    methods: Record<string, ConnectorMethodImplementation>;
}
export interface ConnectorEventSpec {
    key: string;
    name: string;
    description?: string;
    parametersSchema?: DataSchema;
    schema?: DataSchema;
}
export interface ConnectorEventListItem {
    key: string;
    name: string;
}
export interface ConnectorEventGlobalWebhookGetEventSelectorResponse {
    globalWebhookKey: string;
    globalWebhookEventSelector: string;
}
export {};
