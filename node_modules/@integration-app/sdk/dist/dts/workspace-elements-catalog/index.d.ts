import { z } from 'zod';
import { CreateActionRequest } from '../actions';
import { CreateAppDataSchemaRequest } from '../app-data-schemas';
import { CreateAppEventTypeRequest } from '../app-events';
import { CreateDataLinkTableRequest } from '../data-links';
import { CreateDataSourceRequest } from '../data-sources';
import { CreateFieldMappingRequest } from '../field-mappings';
import { CreateFlowRequest } from '../flows';
import { WorkspaceElementType } from '../workspace-elements';
export interface WorkspaceElementSpec {
    type: WorkspaceElementType;
    createSchema?: z.ZodObject<any>;
    updateSchema?: z.ZodObject<any>;
}
export interface WorkspaceElements {
    flows?: Record<string, CreateFlowRequest>;
    actions?: Record<string, CreateActionRequest>;
    fieldMappings?: Record<string, CreateFieldMappingRequest>;
    dataSources?: Record<string, CreateDataSourceRequest>;
    dataLinkTables?: Record<string, CreateDataLinkTableRequest>;
    appEventTypes?: Record<string, CreateAppEventTypeRequest>;
    appDataSchemas?: Record<string, CreateAppDataSchemaRequest>;
}
export declare const WorkspaceElementSpecs: Record<WorkspaceElementType, WorkspaceElementSpec>;
